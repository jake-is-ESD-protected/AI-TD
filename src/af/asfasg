TARGET = AFInC.so

BUILD_DIR = build

# Your C source files
CPP_SOURCES += af.cpp
C_SOURCES += $(shell ls beatDetectionDSP/*.c)

C_INCLUDES += \
-I../transientDSP/ \
-I../hal/ \
-I./

CC = gcc
CFLAGS = -c -fPIC $(C_INCLUDES)

CXX = g++

CPPFLAGS = $(CFLAGS)
CPPFLAGS += \
-fno-exceptions \
-fasm \
-finline \
-finline-functions-called-once \
-fshort-enums \
-fno-move-loop-invariants \
-fno-unwind-tables \
-fno-rtti \
-Wno-register

# Linker flags
LDFLAGS = -shared

all: $(BUILD_DIR)/$(TARGET)

#OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
#vpath %.c $(sort $(dir $(C_SOURCES)))
#OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(CPP_SOURCES:.cpp=.o)))
#vpath %.cpp $(sort $(dir $(CPP_SOURCES)))

#OBJECTS += $(BUILD_DIR)/$(C_SOURCES:.c=.o)

OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o))) 

#$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR)
#	$(CC) -c $(CFLAGS) $(C_STANDARD) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

#$(BUILD_DIR)/%.o: %.cpp Makefile | $(BUILD_DIR)
#	$(CXX) -c $(CPPFLAGS) $(CPP_STANDARD) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.cpp=.lst)) $< -o $@

$(BUILD_DIR)/$(TARGET): $(OBJECTS) 
	$(CC) $(LDFLAGS) $(OBJECTS) $(LDLIBS) -o $(TARGET)

$(BUILD_DIR)/$(OBJECTS): %.o: %.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR):
	mkdir $@

clean:
	-rm -fR $(BUILD_DIR)